{"version":3,"sources":["Components/layout/Images/GoodJob.gif","Components/layout/Input.js","Components/layout/Item.js","Components/layout/GoodJob.js","Components/layout/Items.js","Components/layout/EditItem.js","App.js","serviceWorker.js","Reducers/authreducer.js","Reducers/MainReducer.js","Reducers/ComponentsReducer.js","Reducers/CombineReducers.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","_this$props","this","props","onSubmit","onChange","react_default","a","createElement","className","htmlFor","type","name","value","newTitle","style","borderColor","Component","connect","state","toDos","_ref","el","onClickNotDone","onClickDone","title","toUpperCase","Link","to","concat","id","onClick","GoodJob","src","logo","Items","_this2","done","notDone","Statistics","textAlign","doneAll","length","layout_GoodJob","layout_Input","map","layout_Item","deleteToDoNotDone","deleteToDoDone","key","main","dispach","e","EditItem","onDelete","_this","deleteToDo","toDo","history","push","onSubmitEdit","preventDefault","cursor","data-toggle","href","editValue","fontSize","ownProps","match","params","find","dispatch","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","initState","authreducer","arguments","undefined","completed","MainReducer","action","newPosts","filter","item","newDone","Object","objectSpread","newNotDone","target","defineProperty","newToDo","newArray","newState","console","log","ComponentsReducer","CombineReducers","combineReducers","auth","Comp","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48c65b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GoodJob.f8ce3976.gif\";","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Input extends Component {\n  render() {\n    const { onSubmit, onChange } = this.props;\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Add something to do</label>\n            <input\n              type=\"text\"\n              name=\"newTitle\"\n              value={this.props.newTitle}\n              onChange={onChange}\n              className=\"form-control\"\n              style={{ borderColor: [this.props.borderColor] }}\n            />\n            <small className=\"form-text text-muted\">\n              New to do will show up on your list\n            </small>\n          </div>\n\n          <button className=\"btn btn-primary btn-block mb-5\">\n            Add new to do\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    newTitle: state.newTitle,\n    borderColor: state.borderColor\n  };\n};\nexport default connect(mapStateToProps)(Input);\n\n//@todo\n// Dodawanie tytulu\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Item = ({ el, onClickNotDone, onClickDone }) => {\n  return (\n    <div className=\"card text-center mb-4\">\n      <div className=\"card-header font-weight-bold\">\n        <div className=\"row\">\n          <div className=\"col-md-2\" />\n          <div className=\"col-md-8\">{el.title.toUpperCase()}</div>\n          <div className=\"col-md-2\">\n            {\" \"}\n            <Link to={`/${el.id}`}>Edit</Link>\n          </div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        className=\"btn btn-success btn-block \"\n        onClick={() => onClickDone(el.id)}\n      >\n        Done\n      </button>\n      <button\n        className=\"btn btn-danger btn-block\"\n        onClick={() => onClickNotDone(el.id)}\n      >\n        Not Done\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    toDos: state.toDos\n  };\n};\n\nexport default connect(mapStateToProps)(Item);\n","import React from \"react\";\nimport logo from \"./Images/GoodJob.gif\";\nconst GoodJob = () => {\n  return (\n    <div>\n      <h2>Good Job</h2>\n      <img src={logo} />\n    </div>\n  );\n};\n\nexport default GoodJob;\n","import React, { Component } from \"react\";\nimport Input from \"./Input\";\nimport Item from \"./Item\";\nimport GoodJob from \"./GoodJob\";\nimport { connect } from \"react-redux\";\n\nclass Items extends Component {\n  state = {\n    borderColor: \"\"\n  };\n\n  render() {\n    //@ Shorts\n    const {\n      toDos,\n      done,\n      notDone,\n      onChange,\n      onSubmit,\n      borderColor\n    } = this.props;\n\n    let Statistics = (\n      <div style={{ textAlign: \"center\" }}>\n        <br />\n        {`Done: ${done} Not Done: ${notDone}`}\n      </div>\n    );\n\n    let doneAll = (\n      <div className=\"container text-center\">\n        {toDos && toDos.length === 0 && done + notDone === done && (\n          <div>\n            <h1>You done everythink !</h1>\n            <GoodJob />\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <div className=\"container\">\n        <h3 className=\"text-center\">\n          {toDos && toDos.length === 0\n            ? \"NOTHING TO DO LEFT\"\n            : `What you have to do today ? Left: ${toDos.length}`}\n        </h3>\n        <Input onChange={onChange} onSubmit={onSubmit} />\n\n        {Statistics}\n        {doneAll}\n        {toDos &&\n          toDos.map(el => (\n            <Item\n              el={el}\n              onClickNotDone={this.props.deleteToDoNotDone}\n              onClickDone={this.props.deleteToDoDone}\n              key={el.id}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    toDos: state.main.toDos,\n    done: state.main.done,\n    notDone: state.main.notDone,\n    borderColor: state.main.borderColor\n  };\n};\n\nconst mapDispachToProps = dispach => {\n  return {\n    deleteToDoDone: id => {\n      dispach({ type: \"DELETE_TODO_DONE\", id: id });\n    },\n    deleteToDoNotDone: id => {\n      dispach({ type: \"DELETE_TODO_NOTDONE\", id: id });\n    },\n    onChange: e => {\n      dispach({ type: \"ON_CHANGE\", e: e });\n    },\n    onSubmit: e => {\n      dispach({ type: \"ON_SUBMIT\", e: e });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(Items);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nclass EditItem extends Component {\n  onDelete = () => {\n    this.props.deleteToDo(this.props.toDo.id);\n    this.props.history.push(\"/\");\n  };\n\n  onSubmitEdit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.props.toDo.id);\n  };\n\n  onChange = e => {\n    this.props.onChange(e);\n  };\n\n  render() {\n    const toDo = this.props.toDo ? (\n      <div>\n        <div className=\"card mt-4\">\n          <div className=\"card-header text-center font-weight-bold\">\n            {this.props.toDo.title.toUpperCase()} #{this.props.toDo.id}\n            {/* ICON  */}\n            <i\n              className=\"fas fa-pen ml-3\"\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"collapse\"\n              href=\"#collapseExample\"\n            />\n            <div className=\"collapse\" id=\"collapseExample\">\n              <div className=\"card card-body\">\n                <form onSubmit={this.onSubmitEdit}>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.props.editValue}\n                    onChange={this.onChange}\n                  />\n\n                  <button className=\"btn btn-success mt-2 px-4\">Edit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card-body\">\n            <p className=\"card-text text-center\">Description</p>\n            <button\n              className=\"mx-auto btn btn-danger btn-group d-flex \"\n              onClick={this.onDelete}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n        <Link to=\"/\">\n          <div className=\"text-center mt-3\">\n            <i\n              className=\"fas fa-angle-double-left\"\n              style={{ fontSize: \"20px\" }}\n            >\n              Back\n            </i>\n          </div>\n        </Link>\n      </div>\n    ) : (\n      <div>Loading post...</div>\n    );\n    return <div>{toDo}</div>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.id;\n  return {\n    state: state.main.toDos,\n    toDo: state.main.toDos.find(el => el.id == id),\n    editValue: state.main.editValue\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    deleteToDo: id => dispatch({ type: \"DELETE_TODO\", id: id }),\n    onChange: e => dispatch({ type: \"INPUT_CHANGE\", e: e }),\n    onSubmit: id => dispatch({ type: \"FORM_SUBMIT\", id: id })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(EditItem);\n","import React, { Component } from \"react\";\nimport Items from \"./Components/layout/Items\";\nimport EditItem from \"./Components/layout/EditItem\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Items} />\n            <Route path=\"/:id\" component={EditItem} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = [];\n\nconst authreducer = (state = initState, action) => {\n  return state;\n};\n\nexport default authreducer;\n","let initState = {\n  toDos: [\n    {\n      id: 1,\n      title: \"delectus aut autem\",\n      completed: false\n    },\n    {\n      id: 2,\n      title: \"quis ut nam facilis et officia qui\",\n      completed: false\n    },\n    {\n      id: 3,\n      title: \"fugiat veniam minusssss\",\n      completed: false\n    },\n    {\n      id: 4,\n      title: \"et porro tempora\",\n      completed: true\n    }\n  ],\n  done: 0,\n  notDone: 0,\n  newTitle: \"\",\n  borderColor: \"\",\n  editValue: \"\"\n};\n\nconst MainReducer = (state = initState, action) => {\n  if (action.type === \"DELETE_TODO_DONE\") {\n    let newPosts = state.toDos.filter(item => item.id !== action.id);\n    let newDone = state.done + 1;\n    return {\n      ...state,\n      toDos: newPosts,\n      done: newDone\n    };\n  }\n  if (action.type === \"DELETE_TODO_NOTDONE\") {\n    let newPosts = state.toDos.filter(item => item.id !== action.id);\n    let newNotDone = state.notDone + 1;\n    return {\n      ...state,\n      toDos: newPosts,\n      notDone: newNotDone\n    };\n  }\n  if (action.type === \"ON_CHANGE\") {\n    let name = action.e.target.name;\n    let value = action.e.target.value;\n    return {\n      ...state,\n      [name]: value\n    };\n  }\n  if (action.type === \"ON_SUBMIT\") {\n    action.e.preventDefault();\n    if (state.newToDo || state.newTitle !== \"\") {\n      let lastId = state.toDos.length + 1;\n      const Items = { id: lastId, title: state.newTitle };\n      let newArray = state.toDos.concat(Items);\n      return {\n        ...state,\n        toDos: newArray,\n        newTitle: \"\",\n        borderColor: \"\"\n      };\n    } else {\n      return {\n        ...state,\n        borderColor: \"red\"\n      };\n    }\n  }\n  if (action.type === \"DELETE_TODO\") {\n    let newState = state.toDos.filter(el => el.id !== action.id);\n    console.log(action.id);\n    return {\n      ...state,\n      toDos: newState\n    };\n  }\n  if (action.type === \"INPUT_CHANGE\") {\n    let value = action.e.target.value;\n    return {\n      ...state,\n      editValue: value\n    };\n  }\n  if (action.type === \"FORM_SUBMIT\") {\n    let toDo = state.toDos.filter(el => el.id !== action.id);\n    let Items = { id: action.id, title: state.editValue, completed: false };\n    let newArray = toDo.concat(Items);\n    return {\n      ...state,\n      toDos: newArray\n    };\n  }\n\n  return state;\n};\n\nexport default MainReducer;\n","const initState = [];\n\nconst ComponentsReducer = (state = initState, action) => {\n  return state;\n};\n\nexport default ComponentsReducer;\n","import authreducer from \"./authreducer\";\nimport MainReducer from \"./MainReducer\";\nimport ComponentsReducer from \"./ComponentsReducer\";\nimport { combineReducers } from \"redux\";\n\nconst CombineReducers = combineReducers({\n  auth: authreducer,\n  main: MainReducer,\n  Comp: ComponentsReducer\n});\n\nexport default CombineReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n// import rootReducer from \"./Reducers/RootReducer\";\nimport CombineReducers from \"./Reducers/CombineReducers\";\n\nconst store = createStore(CombineReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}